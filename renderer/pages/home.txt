import React, { useState, useEffect, useRef } from "react";
import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/router";

export default function HomePage() {
  const [state, setState] = useState({
    amount: "",
    entries: [],
    nfcId: "",
    fetchUser: [],
    isStudentIdMode: false,
    nfcModal: false,
    productModal: false,
  });

  const nfcInputRef = useRef(null);
  const router = useRouter();

  const product = [
    { product: "Ulam w/ rice", price: 60 },
    { product: "Rice", price: 15 },
    { product: "Ulam", price: 50 },
    { product: "Water (small)", price: 15 },
    { product: "Water (big)", price: 25 },
    { product: "Softdrinks mismo", price: 25 },
    { product: "Shabu", price: 150 },
  ];

  useEffect(() => {
    if (state.nfcModal && nfcInputRef.current) {
      nfcInputRef.current.focus();
    }
  }, [state.nfcModal]);

  const handleInputChange = (e) =>
    setState((prev) => ({ ...prev, amount: e.target.value }));

  const handleInputSubmit = () => {
    if (state.amount) {
      setState((prev) => ({
        ...prev,
        entries: [
          ...prev.entries,
          { type: "Amount", value: Number(state.amount) },
        ],
        amount: "",
      }));
    }
  };

  const handleProductSelect = (product) => {
    setState((prev) => ({
      ...prev,
      entries: [...prev.entries, { type: "Product", ...product }],
    }));
  };

  const handleAmountChange = (value) => {
    setState((prev) => ({
      ...prev,
      entries: [...prev.entries, { type: "Amount", value }],
    }));
  };

  const clearTotal = () => setState((prev) => ({ ...prev, entries: [] }));

  const total = state.entries.reduce((acc, entry) => {
    if (entry.type === "Amount") {
      return acc + entry.value;
    } else if (entry.type === "Product") {
      return acc + entry.price;
    }
    return acc;
  }, 0);

  const handleSubmit = async () => {
    const store = 1;
    const staff = 6;
    const store_role = "merchant";
    const user_id = state.nfcId;

    try {
      await axios.post(
        "https://attendance-backend-app.up.railway.app/cashier",
        {
          store,
          staff,
          store_role,
          user_id,
          amount: total,
        }
      );
      closeModal();
      location.reload();
    } catch (error) {
      console.error(error);
    }
  };

  const handleNfcIdChange = async (e) => {
    const enteredId = e.target.value;
    setState((prev) => ({ ...prev, nfcId: enteredId }));

    try {
      const res = await axios.get(
        `https://attendance-backend-app.up.railway.app/users/cards/${enteredId}`
      );
      setState((prev) => ({ ...prev, fetchUser: [res.data.data] }));
    } catch (error) {
      console.error(error);
    }
  };

  const handleModeSwitch = () => {
    setState((prev) => ({
      ...prev,
      isStudentIdMode: !prev.isStudentIdMode,
      nfcId: "",
    }));
  };

  const closeModal = () => {
    setState((prev) => ({ ...prev, nfcModal: false, nfcId: "" }));
  };

  return (
    <>
      <Head>
        <title>CMI Canteen</title>
      </Head>
      <main className="flex gap-x-4 w-screen h-screen bg-[#E4EFFF] p-4">
        <div className="w-[70%] bg-white rounded-xl h-full p-4">
          <div className="h-[90%] w-full">
            <h2 className="text-2xl font-semibold text-[#002147]">
              Order List
            </h2>
            <ul className="mt-4 space-y-2">
              {state.entries.map((entry, index) => (
                <li key={index} className="text-lg text-[#002147]">
                  {entry.type === "Amount"
                    ? `Others: ₱ ${entry.value}`
                    : `${entry.product}: ₱ ${entry.price}`}
                </li>
              ))}
            </ul>
            <div className="mt-4 text-xl font-semibold text-[#002147]">
              <p>Total: ₱ {total}</p>
            </div>
          </div>
          {total > 0 && (
            <div className="h-[10%] flex gap-x-4 w-full">
              <button
                onClick={() =>
                  setState((prev) => ({ ...prev, nfcModal: true }))
                }
                className="bg-[#002147] w-[80%] p-3 text-white rounded-xl"
              >
                Pay Now
              </button>
              <button
                onClick={clearTotal}
                className="bg-[#f00] w-[20%] text-sm rounded-xl text-white"
              >
                Clear Total
              </button>
            </div>
          )}
          {state.nfcModal && (
            <div className="fixed bg-white bg-opacity-40 inset-0 flex justify-center items-center">
              <div className="relative rounded-xl w-[80%] h-[80%] bg-[#002147] text-center flex flex-col justify-center items-center">
                <input
                  ref={nfcInputRef}
                  type="text"
                  value={state.nfcId}
                  onChange={handleNfcIdChange}
                  placeholder={
                    state.isStudentIdMode ? "Enter Student ID" : "Tap NFC ID"
                  }
                  className="w-[80%] h-24 border rounded-xl p-3 outline-none text-center"
                />
                <button
                  className="w-[50%] text-white rounded-xl p-4"
                  onClick={handleModeSwitch}
                >
                  {state.isStudentIdMode
                    ? "Switch to NFC ID"
                    : "Switch to Student ID"}
                </button>
                <div className="w-[50%] h-[20%] flex justify-center items-center bg-white">
                  {state.fetchUser.map((user, index) => (
                    <div key={index}>
                      <h1>USER ID: {user.username}</h1>
                      <h1>FULL NAME: {user.full_name}</h1>
                      <h1>BALANCE: {user.total_amount}</h1>
                    </div>
                  ))}
                </div>
                <button
                  onClick={closeModal}
                  className="text-white absolute top-4 right-6 text-4xl"
                >
                  X
                </button>
              </div>
            </div>
          )}
        </div>

        <div className="w-[30%] h-full flex flex-col gap-y-4 bg-white rounded-xl p-4">
          <div className="w-full h-full bg-white rounded-xl">
            <h1 className="text-lg mb-4">Enter Amount:</h1>
            <div className="w-full">
              <input
                type="number"
                value={state.amount}
                onChange={handleInputChange}
                className="p-2 text-sm w-full border border-[#002147] rounded-lg outline-none"
                placeholder="Enter a custom amount"
              />
            </div>
            <button
              onClick={handleInputSubmit}
              className="w-full mt-4 bg-[#002147] p-2 rounded-xl text-white"
            >
              Add Amount
            </button>
            <div className="grid grid-cols-2 mt-4 gap-2">
              {[20, 50, 100, 200, 500, 1000].map((value) => (
                <button
                  key={value}
                  onClick={() => handleAmountChange(value)}
                  className="rounded-xl bg-[#002147] p-3 text-white"
                >
                  ₱{value}
                </button>
              ))}
            </div>
            <button
              onClick={() =>
                setState((prev) => ({ ...prev, productModal: true }))
              }
              className="bg-[#002147] w-full p-4 text-white rounded-xl mt-4 text-sm"
            >
              Products
            </button>
            <button
              onClick={() => router.push("./login")}
              className="bg-red-400 w-full p-3 text-white rounded-xl mt-4"
            >
              Logout
            </button>
          </div>

          {state.productModal && (
            <div className="fixed inset-0 flex items-center justify-center bg-[#000] bg-opacity-50">
              <div className="bg-white p-6 rounded-xl w-[80%] h-[80%]">
                <div className="overflow-y-scroll h-[90%] py-2">
                  <div className="grid grid-cols-3 gap-4">
                    {product.map((item, index) => (
                      <button
                        key={index}
                        onClick={() => handleProductSelect(item)}
                        className="flex flex-col justify-center items-center bg-[#002147] h-20 text-center rounded-xl text-white"
                      >
                        {item.product}
                        <span className="text-sm">₱ {item.price}</span>
                      </button>
                    ))}
                  </div>
                </div>
                <div className="h-[10%] w-full flex justify-end">
                  <button
                    onClick={() =>
                      setState((prev) => ({ ...prev, productModal: false }))
                    }
                    className="bg-[#002147] rounded-xl text-white w-[20%]"
                  >
                    Done
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
